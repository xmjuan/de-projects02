{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-de-projects02"
		},
		"ls_sqldb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_sqldb'"
		},
		"ls_storagegen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_storagegen2'"
		},
		"ls_storagegen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://deprojectstoragetst02.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_fifa')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_fifa_upsert",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "fifa_scd_upsert",
								"type": "DataFlowReference",
								"parameters": {
									"parameter_ID": {
										"value": "'@{pipeline().parameters.parameter_ID}'",
										"type": "Expression"
									},
									"parameter_SCD": {
										"value": "'@{pipeline().parameters.parameter_SCD}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"sourceFifaCsv": {
										"containerName": {
											"value": "@pipeline().parameters.P_containerName",
											"type": "Expression"
										},
										"fileName": {
											"value": "@pipeline().parameters.P_fileName",
											"type": "Expression"
										}
									},
									"ExistingData": {
										"tableName": {
											"value": "@pipeline().parameters.P_tableName",
											"type": "Expression"
										},
										"sName": {
											"value": "@pipeline().parameters.P_sName",
											"type": "Expression"
										}
									},
									"SinkToSqldb": {
										"tableName": {
											"value": "@pipeline().parameters.P_tableName",
											"type": "Expression"
										},
										"sName": {
											"value": "@pipeline().parameters.P_sName",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"P_containerName": {
						"type": "string"
					},
					"P_fileName": {
						"type": "string"
					},
					"P_sName": {
						"type": "string"
					},
					"P_tableName": {
						"type": "string"
					},
					"parameter_ID": {
						"type": "string",
						"defaultValue": "ID"
					},
					"parameter_SCD": {
						"type": "string",
						"defaultValue": "Club,Wage,Position"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/fifa_scd_upsert')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_validateStructure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetMeta_S",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "adf_ds_fifa_source_csv",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "ipl",
									"fileName": "IPL_Players-1.csv"
								}
							},
							"fieldList": [
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetMeta_S",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LookupFileDetails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GetMeta_S').output.structure, json(activity('LookupFileDetails').output.firstRow.structure))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "WaitFalse",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 10
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "WaitTrue",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 5
									}
								},
								{
									"name": "Execute pl_fifa",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "WaitTrue",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_fifa",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"P_containerName": {
												"value": "@activity('LookupFileDetails').output.firstRow.ContainerName",
												"type": "Expression"
											},
											"P_fileName": {
												"value": "@activity('LookupFileDetails').output.firstRow.FileName",
												"type": "Expression"
											},
											"P_sName": {
												"value": "@activity('LookupFileDetails').output.firstRow.SchemaName",
												"type": "Expression"
											},
											"P_tableName": {
												"value": "@activity('LookupFileDetails').output.firstRow.tableName",
												"type": "Expression"
											},
											"parameter_ID": {
												"value": "@activity('LookupFileDetails').output.firstRow.P_ID",
												"type": "Expression"
											},
											"parameter_SCD": {
												"value": "@activity('LookupFileDetails').output.firstRow.P_SCD",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "LookupFileDetails",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[uspGetFileDetails]",
								"storedProcedureParameters": {
									"FileType": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.P_FileType",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "adf_ds_fifa_sql_table",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "tbl_IPLPlayers",
									"sName": "dbo"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"P_FileType": {
						"type": "string",
						"defaultValue": "ipl"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/adf_ds_fifa_source_csv')]",
				"[concat(variables('factoryId'), '/datasets/adf_ds_fifa_sql_table')]",
				"[concat(variables('factoryId'), '/pipelines/pl_fifa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_ds_fifa_source_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_storagegen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containerName": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containerName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_storagegen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_ds_fifa_sql_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "string"
					},
					"sName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sqldb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_sqldb_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_storagegen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_storagegen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_storagegen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/fifa_scd_upsert')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "adf_ds_fifa_source_csv",
								"type": "DatasetReference"
							},
							"name": "sourceFifaCsv"
						},
						{
							"dataset": {
								"referenceName": "adf_ds_fifa_sql_table",
								"type": "DatasetReference"
							},
							"name": "ExistingData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "adf_ds_fifa_sql_table",
								"type": "DatasetReference"
							},
							"name": "SinkToSqldb"
						}
					],
					"transformations": [
						{
							"name": "CallNewHashValues"
						},
						{
							"name": "CallExistingHashValues"
						},
						{
							"name": "CheckForNewData"
						},
						{
							"name": "AddSkey"
						},
						{
							"name": "GetMaxSkeyFromExisting"
						},
						{
							"name": "joinMaxSkey"
						},
						{
							"name": "CalcuateExtraColumn"
						},
						{
							"name": "SelectRelevantColumns"
						},
						{
							"name": "UpdateExistingData"
						},
						{
							"name": "ChangeUpdateStatus"
						},
						{
							"name": "SelectRelevantColumes"
						},
						{
							"name": "InsertSet"
						},
						{
							"name": "UpdateSet"
						},
						{
							"name": "UnionUpdateInsert"
						}
					],
					"scriptLines": [
						"parameters{",
						"     parameter_ID as string ('ID'),",
						"     parameter_SCD as string ('Club,Wage,Position')",
						"}",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourceFifaCsv",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ExistingData",
						"sourceFifaCsv derive(hash_ID = md5(byName($parameter_ID)),",
						"          hash_SCD = md5(byNames(split($parameter_SCD, \",\")))) ~> CallNewHashValues",
						"ExistingData derive(hash_ID = md5(byName($parameter_ID)),",
						"          hash_scd = md5(byNames(split($parameter_SCD, \",\")))) ~> CallExistingHashValues",
						"CallNewHashValues, CallExistingHashValues exists(CallNewHashValues@hash_ID == CallExistingHashValues@hash_ID",
						"     && CallNewHashValues@hash_SCD == CallExistingHashValues@hash_scd,",
						"     negate:true,",
						"     broadcast: 'auto')~> CheckForNewData",
						"CheckForNewData keyGenerate(output(SKey as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> AddSkey",
						"CallExistingHashValues aggregate(MaxSkey = max(toInteger(byName('SKey')))) ~> GetMaxSkeyFromExisting",
						"AddSkey, GetMaxSkeyFromExisting join(MaxSkey==SKey||true(),",
						"     joinType:'cross',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinMaxSkey",
						"joinMaxSkey derive(Skey = SKey + iifNull(MaxSkey, 0),",
						"          Active = 1,",
						"          ActiveStartTime = currentUTC(),",
						"          ActiveEndTime = toTimestamp(toString(null()))) ~> CalcuateExtraColumn",
						"CalcuateExtraColumn select(mapColumn(",
						"          each(match(name!='hash_ID'&&name!='hash_SCD'&&name!='MaxSkey'))",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectRelevantColumns",
						"CallExistingHashValues, CheckForNewData exists(CallExistingHashValues@hash_ID == CallNewHashValues@hash_ID,",
						"     negate:false,",
						"     broadcast: 'auto')~> UpdateExistingData",
						"UpdateExistingData derive(Active = 0,",
						"          ActiveEndTime = currentUTC()) ~> ChangeUpdateStatus",
						"ChangeUpdateStatus select(mapColumn(",
						"          each(match(!in(['hash_ID','hash_SCD'],name)))",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectRelevantColumes",
						"SelectRelevantColumns alterRow(insertIf(true())) ~> InsertSet",
						"SelectRelevantColumes alterRow(updateIf(true())) ~> UpdateSet",
						"InsertSet, UpdateSet union(byName: true)~> UnionUpdateInsert",
						"UnionUpdateInsert sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:true,",
						"     upsertable:false,",
						"     keys:[($parameter_ID)],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> SinkToSqldb"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/adf_ds_fifa_source_csv')]",
				"[concat(variables('factoryId'), '/datasets/adf_ds_fifa_sql_table')]"
			]
		}
	]
}